
EchoTryAtCar.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  00000b14  00000ba8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b14  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000c9  00800110  00800110  00000bb8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000bb8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c14  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  00000c54  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001bfd  00000000  00000000  00000da4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a9f  00000000  00000000  000029a1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b22  00000000  00000000  00003440  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000404  00000000  00000000  00003f64  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007a6  00000000  00000000  00004368  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000013f9  00000000  00000000  00004b0e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000130  00000000  00000000  00005f07  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__vector_2>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 4b 01 	jmp	0x296	; 0x296 <__vector_18>
  4c:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__vector_19>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 e1       	ldi	r30, 0x14	; 20
  7c:	fb e0       	ldi	r31, 0x0B	; 11
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 31       	cpi	r26, 0x10	; 16
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e1       	ldi	r26, 0x10	; 16
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a9 3d       	cpi	r26, 0xD9	; 217
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 98 00 	call	0x130	; 0x130 <main>
  9e:	0c 94 88 05 	jmp	0xb10	; 0xb10 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <initPinsAndInterrupts>:
volatile bool echo;
uint16_t distance;
uint16_t ticks= 0;

void initPinsAndInterrupts(){
	DDRB |= 1 << DDB1;		//set PORTB1 as output (used to send a trigger signal for ultrasonic sensor)
  a6:	21 9a       	sbi	0x04, 1	; 4
	
	//The next two lines initialize interrupt code for external interrupt INT1 (see documentation for details)
	EICRA |= (1 << ISC10);		//External interrupt control register set INT1 to trigger ANY logic change
  a8:	e9 e6       	ldi	r30, 0x69	; 105
  aa:	f0 e0       	ldi	r31, 0x00	; 0
  ac:	80 81       	ld	r24, Z
  ae:	84 60       	ori	r24, 0x04	; 4
  b0:	80 83       	st	Z, r24
	EIMSK |= (1 << INT1);		//Turn on INT1
  b2:	e9 9a       	sbi	0x1d, 1	; 29
	
	TIMSK1 |= (1<<TOIE1);					//enable the interrupt flag
  b4:	ef e6       	ldi	r30, 0x6F	; 111
  b6:	f0 e0       	ldi	r31, 0x00	; 0
  b8:	80 81       	ld	r24, Z
  ba:	81 60       	ori	r24, 0x01	; 1
  bc:	80 83       	st	Z, r24
	TCCR1B |= (1<< CS12) | (1<< CS10);		//prescaler of 1024
  be:	e1 e8       	ldi	r30, 0x81	; 129
  c0:	f0 e0       	ldi	r31, 0x00	; 0
  c2:	80 81       	ld	r24, Z
  c4:	85 60       	ori	r24, 0x05	; 5
  c6:	80 83       	st	Z, r24
	TCCR1A = 0b00000000;					// normal mode
  c8:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
	TIFR1 |= (1<<TOV1);						// enable overflow flag
  cc:	b0 9a       	sbi	0x16, 0	; 22
  ce:	08 95       	ret

000000d0 <__vector_2>:
}
	
	

ISR(INT1_vect){	//ISR for when there is a change in logic level (for ultrasonic)
  d0:	1f 92       	push	r1
  d2:	0f 92       	push	r0
  d4:	0f b6       	in	r0, 0x3f	; 63
  d6:	0f 92       	push	r0
  d8:	11 24       	eor	r1, r1
  da:	8f 93       	push	r24
  dc:	9f 93       	push	r25
	
	if (PIND & (1 << PIND3))		//if echosignal is 1, the echo signal is high
  de:	4b 9b       	sbis	0x09, 3	; 9
  e0:	05 c0       	rjmp	.+10     	; 0xec <__vector_2+0x1c>
	{
		TCNT1 = 0;	//set timer data register to 0
  e2:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
  e6:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
  ea:	0d c0       	rjmp	.+26     	; 0x106 <__vector_2+0x36>
	}
	else if(!(PIND & (1 << PIND3)))	//if echosignal is 0, the echo signal is low
  ec:	4b 99       	sbic	0x09, 3	; 9
  ee:	0b c0       	rjmp	.+22     	; 0x106 <__vector_2+0x36>
	{
		ticks=TCNT1;		//store the length of the signal in lengthSignal
  f0:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
  f4:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
  f8:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <__data_end+0x1>
  fc:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
		echo = true;
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <echo>
	}
}
 106:	9f 91       	pop	r25
 108:	8f 91       	pop	r24
 10a:	0f 90       	pop	r0
 10c:	0f be       	out	0x3f, r0	; 63
 10e:	0f 90       	pop	r0
 110:	1f 90       	pop	r1
 112:	18 95       	reti

00000114 <trigger>:

void trigger() {
	PORTB &= ~(1<<PORTB1);	//set EDS pin to 0
 114:	29 98       	cbi	0x05, 1	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 116:	8a e0       	ldi	r24, 0x0A	; 10
 118:	8a 95       	dec	r24
 11a:	f1 f7       	brne	.-4      	; 0x118 <trigger+0x4>
 11c:	00 c0       	rjmp	.+0      	; 0x11e <trigger+0xa>
	_delay_us(2);			//wait 2 microseconds
	PORTB |= (1<<PORTB1);	//set PORTB1 to high and trigger the signal from the ultrasonic distance sensor
 11e:	29 9a       	sbi	0x05, 1	; 5
 120:	85 e3       	ldi	r24, 0x35	; 53
 122:	8a 95       	dec	r24
 124:	f1 f7       	brne	.-4      	; 0x122 <trigger+0xe>
 126:	00 00       	nop
	_delay_us(10);			//wait till the signal is send
	PORTB &= ~(1<<PORTB1);	// set EDS pin to 0 again
 128:	29 98       	cbi	0x05, 1	; 5
	echo = false;
 12a:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <echo>
 12e:	08 95       	ret

00000130 <main>:
}
	
	
int main(void)
{
 130:	cf 93       	push	r28
 132:	df 93       	push	r29
 134:	cd b7       	in	r28, 0x3d	; 61
 136:	de b7       	in	r29, 0x3e	; 62
 138:	e2 97       	sbiw	r28, 0x32	; 50
 13a:	0f b6       	in	r0, 0x3f	; 63
 13c:	f8 94       	cli
 13e:	de bf       	out	0x3e, r29	; 62
 140:	0f be       	out	0x3f, r0	; 63
 142:	cd bf       	out	0x3d, r28	; 61
	initPinsAndInterrupts();
 144:	0e 94 53 00 	call	0xa6	; 0xa6 <initPinsAndInterrupts>
	
	sei();
 148:	78 94       	sei
	}
	
	static inline void uart0_set_FrameFormat(uint8_t UCSRC_reg) __attribute__((always_inline));
	static inline void uart0_set_FrameFormat(uint8_t UCSRC_reg) // UCSRC_reg can be used to set other than 8n1 transmission
	{
		UCSR0C_REGISTER = UCSRC_reg;
 14a:	86 e0       	ldi	r24, 0x06	; 6
 14c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
	{
	#ifdef USART0_RS485_MODE
		RS485_CONTROL0_DDR |= (1<<RS485_CONTROL0_IONUM); // default pin state is low
	#endif
		
		UBRR0L_REGISTER = (uint8_t) ubrr_value;
 150:	80 e1       	ldi	r24, 0x10	; 16
 152:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
		
	#ifdef USART_SKIP_UBRRH_IF_ZERO
		if(__builtin_constant_p(ubrr_value))
			if(((ubrr_value>>8) != 0)) // requires -Os flag - do not use in non-inline functions
	#endif
			UBRR0H_REGISTER = (ubrr_value>>8);
 156:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
		
	#ifdef USART0_U2X_SPEED
		#ifdef USART0_MPCM_MODE
			UCSR0A_REGISTER = (1<<U2X0_BIT)|(1<<MPCM0_BIT);
		#else
			UCSR0A_REGISTER = (1<<U2X0_BIT); // enable double speed
 15a:	82 e0       	ldi	r24, 0x02	; 2
 15c:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
		#endif
	#elif defined(USART0_MPCM_MODE)
		UCSR0A_REGISTER |= (1<<MPCM0_BIT);
	#endif
		
		UCSR0B_REGISTER = USART0_CONFIG_B;
 160:	88 e9       	ldi	r24, 0x98	; 152
 162:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
			distance = ticks * 1.088 ;
			
		}
		else
		{
			distance= 11111; // for measure out of range
 166:	0f 2e       	mov	r0, r31
 168:	f7 e6       	ldi	r31, 0x67	; 103
 16a:	cf 2e       	mov	r12, r31
 16c:	fb e2       	ldi	r31, 0x2B	; 43
 16e:	df 2e       	mov	r13, r31
 170:	f0 2d       	mov	r31, r0
		}
		
		char buffer[50]; // for the output on the monitor
		snprintf(buffer, 50, "Distance: %d\n\r", distance); //saves the String in the buffer
 172:	0f 2e       	mov	r0, r31
 174:	f0 e0       	ldi	r31, 0x00	; 0
 176:	ef 2e       	mov	r14, r31
 178:	f1 e0       	ldi	r31, 0x01	; 1
 17a:	ff 2e       	mov	r15, r31
 17c:	f0 2d       	mov	r31, r0
 17e:	0f 2e       	mov	r0, r31
 180:	f2 e3       	ldi	r31, 0x32	; 50
 182:	bf 2e       	mov	r11, r31
 184:	f0 2d       	mov	r31, r0
 186:	8e 01       	movw	r16, r28
 188:	0f 5f       	subi	r16, 0xFF	; 255
 18a:	1f 4f       	sbci	r17, 0xFF	; 255
	uart_init(DOUBLE_BAUD_CALC(115200));
	
    /* Replace with your application code */
    while (1) 
    {
		trigger();
 18c:	0e 94 8a 00 	call	0x114	; 0x114 <trigger>
		//while(!echo);
		if(ticks < 368)
 190:	60 91 10 01 	lds	r22, 0x0110	; 0x800110 <__data_end>
 194:	70 91 11 01 	lds	r23, 0x0111	; 0x800111 <__data_end+0x1>
 198:	60 37       	cpi	r22, 0x70	; 112
 19a:	21 e0       	ldi	r18, 0x01	; 1
 19c:	72 07       	cpc	r23, r18
 19e:	88 f4       	brcc	.+34     	; 0x1c2 <main+0x92>
		{
			distance = ticks * 1.088 ;
 1a0:	80 e0       	ldi	r24, 0x00	; 0
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	0e 94 95 01 	call	0x32a	; 0x32a <__floatunsisf>
 1a8:	26 e9       	ldi	r18, 0x96	; 150
 1aa:	33 e4       	ldi	r19, 0x43	; 67
 1ac:	4b e8       	ldi	r20, 0x8B	; 139
 1ae:	5f e3       	ldi	r21, 0x3F	; 63
 1b0:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <__mulsf3>
 1b4:	0e 94 66 01 	call	0x2cc	; 0x2cc <__fixunssfsi>
 1b8:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <distance+0x1>
 1bc:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <distance>
 1c0:	04 c0       	rjmp	.+8      	; 0x1ca <main+0x9a>
			
		}
		else
		{
			distance= 11111; // for measure out of range
 1c2:	d0 92 13 01 	sts	0x0113, r13	; 0x800113 <distance+0x1>
 1c6:	c0 92 12 01 	sts	0x0112, r12	; 0x800112 <distance>
		}
		
		char buffer[50]; // for the output on the monitor
		snprintf(buffer, 50, "Distance: %d\n\r", distance); //saves the String in the buffer
 1ca:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <distance+0x1>
 1ce:	8f 93       	push	r24
 1d0:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <distance>
 1d4:	8f 93       	push	r24
 1d6:	ff 92       	push	r15
 1d8:	ef 92       	push	r14
 1da:	1f 92       	push	r1
 1dc:	bf 92       	push	r11
 1de:	1f 93       	push	r17
 1e0:	0f 93       	push	r16
 1e2:	0e 94 90 02 	call	0x520	; 0x520 <snprintf>
		uart_puts(buffer);	//send it with uart
 1e6:	c8 01       	movw	r24, r16
 1e8:	0e 94 1d 01 	call	0x23a	; 0x23a <uart0_putstr>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1ec:	8f ef       	ldi	r24, 0xFF	; 255
 1ee:	91 ee       	ldi	r25, 0xE1	; 225
 1f0:	24 e0       	ldi	r18, 0x04	; 4
 1f2:	81 50       	subi	r24, 0x01	; 1
 1f4:	90 40       	sbci	r25, 0x00	; 0
 1f6:	20 40       	sbci	r18, 0x00	; 0
 1f8:	e1 f7       	brne	.-8      	; 0x1f2 <main+0xc2>
 1fa:	00 c0       	rjmp	.+0      	; 0x1fc <main+0xcc>
 1fc:	00 00       	nop
		_delay_ms(100);
    }
 1fe:	0f b6       	in	r0, 0x3f	; 63
 200:	f8 94       	cli
 202:	de bf       	out	0x3e, r29	; 62
 204:	0f be       	out	0x3f, r0	; 63
 206:	cd bf       	out	0x3d, r28	; 61
 208:	c1 cf       	rjmp	.-126    	; 0x18c <main+0x5c>

0000020a <uart0_putc>:
//Return    : Next byte in buffer.
//******************************************************************
	uint8_t uart0_peek(void)
	{
		return rx0_buffer[(rx0_Tail+1) & RX0_BUFFER_MASK];
	}
 20a:	90 91 97 01 	lds	r25, 0x0197	; 0x800197 <tx0_Head>
 20e:	9f 5f       	subi	r25, 0xFF	; 255
 210:	9f 73       	andi	r25, 0x3F	; 63
 212:	20 91 95 01 	lds	r18, 0x0195	; 0x800195 <tx0_Tail>
 216:	92 17       	cp	r25, r18
 218:	e1 f3       	breq	.-8      	; 0x212 <uart0_putc+0x8>
 21a:	e9 2f       	mov	r30, r25
 21c:	f0 e0       	ldi	r31, 0x00	; 0
 21e:	e7 56       	subi	r30, 0x67	; 103
 220:	fe 4f       	sbci	r31, 0xFE	; 254
 222:	80 83       	st	Z, r24
 224:	2f b7       	in	r18, 0x3f	; 63
 226:	f8 94       	cli
 228:	90 93 97 01 	sts	0x0197, r25	; 0x800197 <tx0_Head>
 22c:	e1 ec       	ldi	r30, 0xC1	; 193
 22e:	f0 e0       	ldi	r31, 0x00	; 0
 230:	80 81       	ld	r24, Z
 232:	80 62       	ori	r24, 0x20	; 32
 234:	80 83       	st	Z, r24
 236:	2f bf       	out	0x3f, r18	; 63
 238:	08 95       	ret

0000023a <uart0_putstr>:
 23a:	cf 93       	push	r28
 23c:	df 93       	push	r29
 23e:	ec 01       	movw	r28, r24
 240:	21 96       	adiw	r28, 0x01	; 1
 242:	fc 01       	movw	r30, r24
 244:	80 81       	ld	r24, Z
 246:	88 23       	and	r24, r24
 248:	29 f0       	breq	.+10     	; 0x254 <uart0_putstr+0x1a>
 24a:	0e 94 05 01 	call	0x20a	; 0x20a <uart0_putc>
 24e:	89 91       	ld	r24, Y+
 250:	81 11       	cpse	r24, r1
 252:	fb cf       	rjmp	.-10     	; 0x24a <uart0_putstr+0x10>
 254:	df 91       	pop	r29
 256:	cf 91       	pop	r28
 258:	08 95       	ret

0000025a <__vector_19>:

#ifndef NO_TX0_INTERRUPT

	ISR(UDRE0_INTERRUPT, ISR_NAKED)
	{
		asm volatile("\n\t"
 25a:	0f 93       	push	r16
 25c:	0f b7       	in	r16, 0x3f	; 63
 25e:	ef 93       	push	r30
 260:	ff 93       	push	r31
 262:	e0 91 95 01 	lds	r30, 0x0195	; 0x800195 <tx0_Tail>
 266:	f0 91 97 01 	lds	r31, 0x0197	; 0x800197 <tx0_Head>
 26a:	e3 95       	inc	r30
 26c:	ef 73       	andi	r30, 0x3F	; 63
 26e:	ef 13       	cpse	r30, r31
 270:	05 c0       	rjmp	.+10     	; 0x27c <USART0_TX_CONTINUE>
 272:	f0 91 c1 00 	lds	r31, 0x00C1	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
 276:	ff 7d       	andi	r31, 0xDF	; 223
 278:	f0 93 c1 00 	sts	0x00C1, r31	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>

0000027c <USART0_TX_CONTINUE>:
 27c:	e0 93 95 01 	sts	0x0195, r30	; 0x800195 <tx0_Tail>
 280:	f0 e0       	ldi	r31, 0x00	; 0
 282:	e7 56       	subi	r30, 0x67	; 103
 284:	fe 4f       	sbci	r31, 0xFE	; 254
 286:	e0 81       	ld	r30, Z
 288:	e0 93 c6 00 	sts	0x00C6, r30	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>

0000028c <USART0_TX_EXIT>:
 28c:	ff 91       	pop	r31
 28e:	ef 91       	pop	r30
 290:	0f bf       	out	0x3f, r16	; 63
 292:	0f 91       	pop	r16
 294:	18 95       	reti

00000296 <__vector_18>:

#ifndef NO_RX0_INTERRUPT

	ISR(RX0_INTERRUPT, ISR_NAKED)
	{
		asm volatile("\n\t"
 296:	0f 93       	push	r16
 298:	0f b7       	in	r16, 0x3f	; 63
 29a:	9f 93       	push	r25
 29c:	90 91 c6 00 	lds	r25, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 2a0:	ef 93       	push	r30
 2a2:	ff 93       	push	r31
 2a4:	e0 91 98 01 	lds	r30, 0x0198	; 0x800198 <rx0_Head>
 2a8:	f0 91 96 01 	lds	r31, 0x0196	; 0x800196 <rx0_Tail>
 2ac:	e3 95       	inc	r30
 2ae:	ef 77       	andi	r30, 0x7F	; 127
 2b0:	fe 17       	cp	r31, r30
 2b2:	31 f0       	breq	.+12     	; 0x2c0 <USART0_RX_EXIT>
 2b4:	e0 93 98 01 	sts	0x0198, r30	; 0x800198 <rx0_Head>
 2b8:	f0 e0       	ldi	r31, 0x00	; 0
 2ba:	eb 5e       	subi	r30, 0xEB	; 235
 2bc:	fe 4f       	sbci	r31, 0xFE	; 254
 2be:	90 83       	st	Z, r25

000002c0 <USART0_RX_EXIT>:
 2c0:	ff 91       	pop	r31
 2c2:	ef 91       	pop	r30
 2c4:	9f 91       	pop	r25
 2c6:	0f bf       	out	0x3f, r16	; 63
 2c8:	0f 91       	pop	r16
 2ca:	18 95       	reti

000002cc <__fixunssfsi>:
 2cc:	0e 94 da 01 	call	0x3b4	; 0x3b4 <__fp_splitA>
 2d0:	88 f0       	brcs	.+34     	; 0x2f4 <__fixunssfsi+0x28>
 2d2:	9f 57       	subi	r25, 0x7F	; 127
 2d4:	98 f0       	brcs	.+38     	; 0x2fc <__fixunssfsi+0x30>
 2d6:	b9 2f       	mov	r27, r25
 2d8:	99 27       	eor	r25, r25
 2da:	b7 51       	subi	r27, 0x17	; 23
 2dc:	b0 f0       	brcs	.+44     	; 0x30a <__fixunssfsi+0x3e>
 2de:	e1 f0       	breq	.+56     	; 0x318 <__fixunssfsi+0x4c>
 2e0:	66 0f       	add	r22, r22
 2e2:	77 1f       	adc	r23, r23
 2e4:	88 1f       	adc	r24, r24
 2e6:	99 1f       	adc	r25, r25
 2e8:	1a f0       	brmi	.+6      	; 0x2f0 <__fixunssfsi+0x24>
 2ea:	ba 95       	dec	r27
 2ec:	c9 f7       	brne	.-14     	; 0x2e0 <__fixunssfsi+0x14>
 2ee:	14 c0       	rjmp	.+40     	; 0x318 <__fixunssfsi+0x4c>
 2f0:	b1 30       	cpi	r27, 0x01	; 1
 2f2:	91 f0       	breq	.+36     	; 0x318 <__fixunssfsi+0x4c>
 2f4:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <__fp_zero>
 2f8:	b1 e0       	ldi	r27, 0x01	; 1
 2fa:	08 95       	ret
 2fc:	0c 94 f4 01 	jmp	0x3e8	; 0x3e8 <__fp_zero>
 300:	67 2f       	mov	r22, r23
 302:	78 2f       	mov	r23, r24
 304:	88 27       	eor	r24, r24
 306:	b8 5f       	subi	r27, 0xF8	; 248
 308:	39 f0       	breq	.+14     	; 0x318 <__fixunssfsi+0x4c>
 30a:	b9 3f       	cpi	r27, 0xF9	; 249
 30c:	cc f3       	brlt	.-14     	; 0x300 <__fixunssfsi+0x34>
 30e:	86 95       	lsr	r24
 310:	77 95       	ror	r23
 312:	67 95       	ror	r22
 314:	b3 95       	inc	r27
 316:	d9 f7       	brne	.-10     	; 0x30e <__fixunssfsi+0x42>
 318:	3e f4       	brtc	.+14     	; 0x328 <__fixunssfsi+0x5c>
 31a:	90 95       	com	r25
 31c:	80 95       	com	r24
 31e:	70 95       	com	r23
 320:	61 95       	neg	r22
 322:	7f 4f       	sbci	r23, 0xFF	; 255
 324:	8f 4f       	sbci	r24, 0xFF	; 255
 326:	9f 4f       	sbci	r25, 0xFF	; 255
 328:	08 95       	ret

0000032a <__floatunsisf>:
 32a:	e8 94       	clt
 32c:	09 c0       	rjmp	.+18     	; 0x340 <__floatsisf+0x12>

0000032e <__floatsisf>:
 32e:	97 fb       	bst	r25, 7
 330:	3e f4       	brtc	.+14     	; 0x340 <__floatsisf+0x12>
 332:	90 95       	com	r25
 334:	80 95       	com	r24
 336:	70 95       	com	r23
 338:	61 95       	neg	r22
 33a:	7f 4f       	sbci	r23, 0xFF	; 255
 33c:	8f 4f       	sbci	r24, 0xFF	; 255
 33e:	9f 4f       	sbci	r25, 0xFF	; 255
 340:	99 23       	and	r25, r25
 342:	a9 f0       	breq	.+42     	; 0x36e <__floatsisf+0x40>
 344:	f9 2f       	mov	r31, r25
 346:	96 e9       	ldi	r25, 0x96	; 150
 348:	bb 27       	eor	r27, r27
 34a:	93 95       	inc	r25
 34c:	f6 95       	lsr	r31
 34e:	87 95       	ror	r24
 350:	77 95       	ror	r23
 352:	67 95       	ror	r22
 354:	b7 95       	ror	r27
 356:	f1 11       	cpse	r31, r1
 358:	f8 cf       	rjmp	.-16     	; 0x34a <__floatsisf+0x1c>
 35a:	fa f4       	brpl	.+62     	; 0x39a <__floatsisf+0x6c>
 35c:	bb 0f       	add	r27, r27
 35e:	11 f4       	brne	.+4      	; 0x364 <__floatsisf+0x36>
 360:	60 ff       	sbrs	r22, 0
 362:	1b c0       	rjmp	.+54     	; 0x39a <__floatsisf+0x6c>
 364:	6f 5f       	subi	r22, 0xFF	; 255
 366:	7f 4f       	sbci	r23, 0xFF	; 255
 368:	8f 4f       	sbci	r24, 0xFF	; 255
 36a:	9f 4f       	sbci	r25, 0xFF	; 255
 36c:	16 c0       	rjmp	.+44     	; 0x39a <__floatsisf+0x6c>
 36e:	88 23       	and	r24, r24
 370:	11 f0       	breq	.+4      	; 0x376 <__floatsisf+0x48>
 372:	96 e9       	ldi	r25, 0x96	; 150
 374:	11 c0       	rjmp	.+34     	; 0x398 <__floatsisf+0x6a>
 376:	77 23       	and	r23, r23
 378:	21 f0       	breq	.+8      	; 0x382 <__floatsisf+0x54>
 37a:	9e e8       	ldi	r25, 0x8E	; 142
 37c:	87 2f       	mov	r24, r23
 37e:	76 2f       	mov	r23, r22
 380:	05 c0       	rjmp	.+10     	; 0x38c <__floatsisf+0x5e>
 382:	66 23       	and	r22, r22
 384:	71 f0       	breq	.+28     	; 0x3a2 <__floatsisf+0x74>
 386:	96 e8       	ldi	r25, 0x86	; 134
 388:	86 2f       	mov	r24, r22
 38a:	70 e0       	ldi	r23, 0x00	; 0
 38c:	60 e0       	ldi	r22, 0x00	; 0
 38e:	2a f0       	brmi	.+10     	; 0x39a <__floatsisf+0x6c>
 390:	9a 95       	dec	r25
 392:	66 0f       	add	r22, r22
 394:	77 1f       	adc	r23, r23
 396:	88 1f       	adc	r24, r24
 398:	da f7       	brpl	.-10     	; 0x390 <__floatsisf+0x62>
 39a:	88 0f       	add	r24, r24
 39c:	96 95       	lsr	r25
 39e:	87 95       	ror	r24
 3a0:	97 f9       	bld	r25, 7
 3a2:	08 95       	ret

000003a4 <__fp_split3>:
 3a4:	57 fd       	sbrc	r21, 7
 3a6:	90 58       	subi	r25, 0x80	; 128
 3a8:	44 0f       	add	r20, r20
 3aa:	55 1f       	adc	r21, r21
 3ac:	59 f0       	breq	.+22     	; 0x3c4 <__fp_splitA+0x10>
 3ae:	5f 3f       	cpi	r21, 0xFF	; 255
 3b0:	71 f0       	breq	.+28     	; 0x3ce <__fp_splitA+0x1a>
 3b2:	47 95       	ror	r20

000003b4 <__fp_splitA>:
 3b4:	88 0f       	add	r24, r24
 3b6:	97 fb       	bst	r25, 7
 3b8:	99 1f       	adc	r25, r25
 3ba:	61 f0       	breq	.+24     	; 0x3d4 <__fp_splitA+0x20>
 3bc:	9f 3f       	cpi	r25, 0xFF	; 255
 3be:	79 f0       	breq	.+30     	; 0x3de <__fp_splitA+0x2a>
 3c0:	87 95       	ror	r24
 3c2:	08 95       	ret
 3c4:	12 16       	cp	r1, r18
 3c6:	13 06       	cpc	r1, r19
 3c8:	14 06       	cpc	r1, r20
 3ca:	55 1f       	adc	r21, r21
 3cc:	f2 cf       	rjmp	.-28     	; 0x3b2 <__fp_split3+0xe>
 3ce:	46 95       	lsr	r20
 3d0:	f1 df       	rcall	.-30     	; 0x3b4 <__fp_splitA>
 3d2:	08 c0       	rjmp	.+16     	; 0x3e4 <__fp_splitA+0x30>
 3d4:	16 16       	cp	r1, r22
 3d6:	17 06       	cpc	r1, r23
 3d8:	18 06       	cpc	r1, r24
 3da:	99 1f       	adc	r25, r25
 3dc:	f1 cf       	rjmp	.-30     	; 0x3c0 <__fp_splitA+0xc>
 3de:	86 95       	lsr	r24
 3e0:	71 05       	cpc	r23, r1
 3e2:	61 05       	cpc	r22, r1
 3e4:	08 94       	sec
 3e6:	08 95       	ret

000003e8 <__fp_zero>:
 3e8:	e8 94       	clt

000003ea <__fp_szero>:
 3ea:	bb 27       	eor	r27, r27
 3ec:	66 27       	eor	r22, r22
 3ee:	77 27       	eor	r23, r23
 3f0:	cb 01       	movw	r24, r22
 3f2:	97 f9       	bld	r25, 7
 3f4:	08 95       	ret

000003f6 <__mulsf3>:
 3f6:	0e 94 0e 02 	call	0x41c	; 0x41c <__mulsf3x>
 3fa:	0c 94 7f 02 	jmp	0x4fe	; 0x4fe <__fp_round>
 3fe:	0e 94 71 02 	call	0x4e2	; 0x4e2 <__fp_pscA>
 402:	38 f0       	brcs	.+14     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 404:	0e 94 78 02 	call	0x4f0	; 0x4f0 <__fp_pscB>
 408:	20 f0       	brcs	.+8      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 40a:	95 23       	and	r25, r21
 40c:	11 f0       	breq	.+4      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 40e:	0c 94 68 02 	jmp	0x4d0	; 0x4d0 <__fp_inf>
 412:	0c 94 6e 02 	jmp	0x4dc	; 0x4dc <__fp_nan>
 416:	11 24       	eor	r1, r1
 418:	0c 94 f5 01 	jmp	0x3ea	; 0x3ea <__fp_szero>

0000041c <__mulsf3x>:
 41c:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <__fp_split3>
 420:	70 f3       	brcs	.-36     	; 0x3fe <__mulsf3+0x8>

00000422 <__mulsf3_pse>:
 422:	95 9f       	mul	r25, r21
 424:	c1 f3       	breq	.-16     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 426:	95 0f       	add	r25, r21
 428:	50 e0       	ldi	r21, 0x00	; 0
 42a:	55 1f       	adc	r21, r21
 42c:	62 9f       	mul	r22, r18
 42e:	f0 01       	movw	r30, r0
 430:	72 9f       	mul	r23, r18
 432:	bb 27       	eor	r27, r27
 434:	f0 0d       	add	r31, r0
 436:	b1 1d       	adc	r27, r1
 438:	63 9f       	mul	r22, r19
 43a:	aa 27       	eor	r26, r26
 43c:	f0 0d       	add	r31, r0
 43e:	b1 1d       	adc	r27, r1
 440:	aa 1f       	adc	r26, r26
 442:	64 9f       	mul	r22, r20
 444:	66 27       	eor	r22, r22
 446:	b0 0d       	add	r27, r0
 448:	a1 1d       	adc	r26, r1
 44a:	66 1f       	adc	r22, r22
 44c:	82 9f       	mul	r24, r18
 44e:	22 27       	eor	r18, r18
 450:	b0 0d       	add	r27, r0
 452:	a1 1d       	adc	r26, r1
 454:	62 1f       	adc	r22, r18
 456:	73 9f       	mul	r23, r19
 458:	b0 0d       	add	r27, r0
 45a:	a1 1d       	adc	r26, r1
 45c:	62 1f       	adc	r22, r18
 45e:	83 9f       	mul	r24, r19
 460:	a0 0d       	add	r26, r0
 462:	61 1d       	adc	r22, r1
 464:	22 1f       	adc	r18, r18
 466:	74 9f       	mul	r23, r20
 468:	33 27       	eor	r19, r19
 46a:	a0 0d       	add	r26, r0
 46c:	61 1d       	adc	r22, r1
 46e:	23 1f       	adc	r18, r19
 470:	84 9f       	mul	r24, r20
 472:	60 0d       	add	r22, r0
 474:	21 1d       	adc	r18, r1
 476:	82 2f       	mov	r24, r18
 478:	76 2f       	mov	r23, r22
 47a:	6a 2f       	mov	r22, r26
 47c:	11 24       	eor	r1, r1
 47e:	9f 57       	subi	r25, 0x7F	; 127
 480:	50 40       	sbci	r21, 0x00	; 0
 482:	9a f0       	brmi	.+38     	; 0x4aa <__mulsf3_pse+0x88>
 484:	f1 f0       	breq	.+60     	; 0x4c2 <__mulsf3_pse+0xa0>
 486:	88 23       	and	r24, r24
 488:	4a f0       	brmi	.+18     	; 0x49c <__mulsf3_pse+0x7a>
 48a:	ee 0f       	add	r30, r30
 48c:	ff 1f       	adc	r31, r31
 48e:	bb 1f       	adc	r27, r27
 490:	66 1f       	adc	r22, r22
 492:	77 1f       	adc	r23, r23
 494:	88 1f       	adc	r24, r24
 496:	91 50       	subi	r25, 0x01	; 1
 498:	50 40       	sbci	r21, 0x00	; 0
 49a:	a9 f7       	brne	.-22     	; 0x486 <__mulsf3_pse+0x64>
 49c:	9e 3f       	cpi	r25, 0xFE	; 254
 49e:	51 05       	cpc	r21, r1
 4a0:	80 f0       	brcs	.+32     	; 0x4c2 <__mulsf3_pse+0xa0>
 4a2:	0c 94 68 02 	jmp	0x4d0	; 0x4d0 <__fp_inf>
 4a6:	0c 94 f5 01 	jmp	0x3ea	; 0x3ea <__fp_szero>
 4aa:	5f 3f       	cpi	r21, 0xFF	; 255
 4ac:	e4 f3       	brlt	.-8      	; 0x4a6 <__mulsf3_pse+0x84>
 4ae:	98 3e       	cpi	r25, 0xE8	; 232
 4b0:	d4 f3       	brlt	.-12     	; 0x4a6 <__mulsf3_pse+0x84>
 4b2:	86 95       	lsr	r24
 4b4:	77 95       	ror	r23
 4b6:	67 95       	ror	r22
 4b8:	b7 95       	ror	r27
 4ba:	f7 95       	ror	r31
 4bc:	e7 95       	ror	r30
 4be:	9f 5f       	subi	r25, 0xFF	; 255
 4c0:	c1 f7       	brne	.-16     	; 0x4b2 <__mulsf3_pse+0x90>
 4c2:	fe 2b       	or	r31, r30
 4c4:	88 0f       	add	r24, r24
 4c6:	91 1d       	adc	r25, r1
 4c8:	96 95       	lsr	r25
 4ca:	87 95       	ror	r24
 4cc:	97 f9       	bld	r25, 7
 4ce:	08 95       	ret

000004d0 <__fp_inf>:
 4d0:	97 f9       	bld	r25, 7
 4d2:	9f 67       	ori	r25, 0x7F	; 127
 4d4:	80 e8       	ldi	r24, 0x80	; 128
 4d6:	70 e0       	ldi	r23, 0x00	; 0
 4d8:	60 e0       	ldi	r22, 0x00	; 0
 4da:	08 95       	ret

000004dc <__fp_nan>:
 4dc:	9f ef       	ldi	r25, 0xFF	; 255
 4de:	80 ec       	ldi	r24, 0xC0	; 192
 4e0:	08 95       	ret

000004e2 <__fp_pscA>:
 4e2:	00 24       	eor	r0, r0
 4e4:	0a 94       	dec	r0
 4e6:	16 16       	cp	r1, r22
 4e8:	17 06       	cpc	r1, r23
 4ea:	18 06       	cpc	r1, r24
 4ec:	09 06       	cpc	r0, r25
 4ee:	08 95       	ret

000004f0 <__fp_pscB>:
 4f0:	00 24       	eor	r0, r0
 4f2:	0a 94       	dec	r0
 4f4:	12 16       	cp	r1, r18
 4f6:	13 06       	cpc	r1, r19
 4f8:	14 06       	cpc	r1, r20
 4fa:	05 06       	cpc	r0, r21
 4fc:	08 95       	ret

000004fe <__fp_round>:
 4fe:	09 2e       	mov	r0, r25
 500:	03 94       	inc	r0
 502:	00 0c       	add	r0, r0
 504:	11 f4       	brne	.+4      	; 0x50a <__fp_round+0xc>
 506:	88 23       	and	r24, r24
 508:	52 f0       	brmi	.+20     	; 0x51e <__fp_round+0x20>
 50a:	bb 0f       	add	r27, r27
 50c:	40 f4       	brcc	.+16     	; 0x51e <__fp_round+0x20>
 50e:	bf 2b       	or	r27, r31
 510:	11 f4       	brne	.+4      	; 0x516 <__fp_round+0x18>
 512:	60 ff       	sbrs	r22, 0
 514:	04 c0       	rjmp	.+8      	; 0x51e <__fp_round+0x20>
 516:	6f 5f       	subi	r22, 0xFF	; 255
 518:	7f 4f       	sbci	r23, 0xFF	; 255
 51a:	8f 4f       	sbci	r24, 0xFF	; 255
 51c:	9f 4f       	sbci	r25, 0xFF	; 255
 51e:	08 95       	ret

00000520 <snprintf>:
 520:	ae e0       	ldi	r26, 0x0E	; 14
 522:	b0 e0       	ldi	r27, 0x00	; 0
 524:	e6 e9       	ldi	r30, 0x96	; 150
 526:	f2 e0       	ldi	r31, 0x02	; 2
 528:	0c 94 5f 05 	jmp	0xabe	; 0xabe <__prologue_saves__+0x1c>
 52c:	0d 89       	ldd	r16, Y+21	; 0x15
 52e:	1e 89       	ldd	r17, Y+22	; 0x16
 530:	8f 89       	ldd	r24, Y+23	; 0x17
 532:	98 8d       	ldd	r25, Y+24	; 0x18
 534:	26 e0       	ldi	r18, 0x06	; 6
 536:	2c 83       	std	Y+4, r18	; 0x04
 538:	1a 83       	std	Y+2, r17	; 0x02
 53a:	09 83       	std	Y+1, r16	; 0x01
 53c:	97 ff       	sbrs	r25, 7
 53e:	02 c0       	rjmp	.+4      	; 0x544 <snprintf+0x24>
 540:	80 e0       	ldi	r24, 0x00	; 0
 542:	90 e8       	ldi	r25, 0x80	; 128
 544:	01 97       	sbiw	r24, 0x01	; 1
 546:	9e 83       	std	Y+6, r25	; 0x06
 548:	8d 83       	std	Y+5, r24	; 0x05
 54a:	ae 01       	movw	r20, r28
 54c:	45 5e       	subi	r20, 0xE5	; 229
 54e:	5f 4f       	sbci	r21, 0xFF	; 255
 550:	69 8d       	ldd	r22, Y+25	; 0x19
 552:	7a 8d       	ldd	r23, Y+26	; 0x1a
 554:	ce 01       	movw	r24, r28
 556:	01 96       	adiw	r24, 0x01	; 1
 558:	0e 94 c0 02 	call	0x580	; 0x580 <vfprintf>
 55c:	4d 81       	ldd	r20, Y+5	; 0x05
 55e:	5e 81       	ldd	r21, Y+6	; 0x06
 560:	57 fd       	sbrc	r21, 7
 562:	0a c0       	rjmp	.+20     	; 0x578 <snprintf+0x58>
 564:	2f 81       	ldd	r18, Y+7	; 0x07
 566:	38 85       	ldd	r19, Y+8	; 0x08
 568:	42 17       	cp	r20, r18
 56a:	53 07       	cpc	r21, r19
 56c:	0c f4       	brge	.+2      	; 0x570 <snprintf+0x50>
 56e:	9a 01       	movw	r18, r20
 570:	f8 01       	movw	r30, r16
 572:	e2 0f       	add	r30, r18
 574:	f3 1f       	adc	r31, r19
 576:	10 82       	st	Z, r1
 578:	2e 96       	adiw	r28, 0x0e	; 14
 57a:	e4 e0       	ldi	r30, 0x04	; 4
 57c:	0c 94 7b 05 	jmp	0xaf6	; 0xaf6 <__epilogue_restores__+0x1c>

00000580 <vfprintf>:
 580:	ab e0       	ldi	r26, 0x0B	; 11
 582:	b0 e0       	ldi	r27, 0x00	; 0
 584:	e6 ec       	ldi	r30, 0xC6	; 198
 586:	f2 e0       	ldi	r31, 0x02	; 2
 588:	0c 94 51 05 	jmp	0xaa2	; 0xaa2 <__prologue_saves__>
 58c:	6c 01       	movw	r12, r24
 58e:	7b 01       	movw	r14, r22
 590:	8a 01       	movw	r16, r20
 592:	fc 01       	movw	r30, r24
 594:	17 82       	std	Z+7, r1	; 0x07
 596:	16 82       	std	Z+6, r1	; 0x06
 598:	83 81       	ldd	r24, Z+3	; 0x03
 59a:	81 ff       	sbrs	r24, 1
 59c:	cc c1       	rjmp	.+920    	; 0x936 <__stack+0x37>
 59e:	ce 01       	movw	r24, r28
 5a0:	01 96       	adiw	r24, 0x01	; 1
 5a2:	3c 01       	movw	r6, r24
 5a4:	f6 01       	movw	r30, r12
 5a6:	93 81       	ldd	r25, Z+3	; 0x03
 5a8:	f7 01       	movw	r30, r14
 5aa:	93 fd       	sbrc	r25, 3
 5ac:	85 91       	lpm	r24, Z+
 5ae:	93 ff       	sbrs	r25, 3
 5b0:	81 91       	ld	r24, Z+
 5b2:	7f 01       	movw	r14, r30
 5b4:	88 23       	and	r24, r24
 5b6:	09 f4       	brne	.+2      	; 0x5ba <vfprintf+0x3a>
 5b8:	ba c1       	rjmp	.+884    	; 0x92e <__stack+0x2f>
 5ba:	85 32       	cpi	r24, 0x25	; 37
 5bc:	39 f4       	brne	.+14     	; 0x5cc <vfprintf+0x4c>
 5be:	93 fd       	sbrc	r25, 3
 5c0:	85 91       	lpm	r24, Z+
 5c2:	93 ff       	sbrs	r25, 3
 5c4:	81 91       	ld	r24, Z+
 5c6:	7f 01       	movw	r14, r30
 5c8:	85 32       	cpi	r24, 0x25	; 37
 5ca:	29 f4       	brne	.+10     	; 0x5d6 <vfprintf+0x56>
 5cc:	b6 01       	movw	r22, r12
 5ce:	90 e0       	ldi	r25, 0x00	; 0
 5d0:	0e 94 b7 04 	call	0x96e	; 0x96e <fputc>
 5d4:	e7 cf       	rjmp	.-50     	; 0x5a4 <vfprintf+0x24>
 5d6:	91 2c       	mov	r9, r1
 5d8:	21 2c       	mov	r2, r1
 5da:	31 2c       	mov	r3, r1
 5dc:	ff e1       	ldi	r31, 0x1F	; 31
 5de:	f3 15       	cp	r31, r3
 5e0:	d8 f0       	brcs	.+54     	; 0x618 <vfprintf+0x98>
 5e2:	8b 32       	cpi	r24, 0x2B	; 43
 5e4:	79 f0       	breq	.+30     	; 0x604 <vfprintf+0x84>
 5e6:	38 f4       	brcc	.+14     	; 0x5f6 <vfprintf+0x76>
 5e8:	80 32       	cpi	r24, 0x20	; 32
 5ea:	79 f0       	breq	.+30     	; 0x60a <vfprintf+0x8a>
 5ec:	83 32       	cpi	r24, 0x23	; 35
 5ee:	a1 f4       	brne	.+40     	; 0x618 <vfprintf+0x98>
 5f0:	23 2d       	mov	r18, r3
 5f2:	20 61       	ori	r18, 0x10	; 16
 5f4:	1d c0       	rjmp	.+58     	; 0x630 <vfprintf+0xb0>
 5f6:	8d 32       	cpi	r24, 0x2D	; 45
 5f8:	61 f0       	breq	.+24     	; 0x612 <vfprintf+0x92>
 5fa:	80 33       	cpi	r24, 0x30	; 48
 5fc:	69 f4       	brne	.+26     	; 0x618 <vfprintf+0x98>
 5fe:	23 2d       	mov	r18, r3
 600:	21 60       	ori	r18, 0x01	; 1
 602:	16 c0       	rjmp	.+44     	; 0x630 <vfprintf+0xb0>
 604:	83 2d       	mov	r24, r3
 606:	82 60       	ori	r24, 0x02	; 2
 608:	38 2e       	mov	r3, r24
 60a:	e3 2d       	mov	r30, r3
 60c:	e4 60       	ori	r30, 0x04	; 4
 60e:	3e 2e       	mov	r3, r30
 610:	2a c0       	rjmp	.+84     	; 0x666 <vfprintf+0xe6>
 612:	f3 2d       	mov	r31, r3
 614:	f8 60       	ori	r31, 0x08	; 8
 616:	1d c0       	rjmp	.+58     	; 0x652 <vfprintf+0xd2>
 618:	37 fc       	sbrc	r3, 7
 61a:	2d c0       	rjmp	.+90     	; 0x676 <vfprintf+0xf6>
 61c:	20 ed       	ldi	r18, 0xD0	; 208
 61e:	28 0f       	add	r18, r24
 620:	2a 30       	cpi	r18, 0x0A	; 10
 622:	40 f0       	brcs	.+16     	; 0x634 <vfprintf+0xb4>
 624:	8e 32       	cpi	r24, 0x2E	; 46
 626:	b9 f4       	brne	.+46     	; 0x656 <vfprintf+0xd6>
 628:	36 fc       	sbrc	r3, 6
 62a:	81 c1       	rjmp	.+770    	; 0x92e <__stack+0x2f>
 62c:	23 2d       	mov	r18, r3
 62e:	20 64       	ori	r18, 0x40	; 64
 630:	32 2e       	mov	r3, r18
 632:	19 c0       	rjmp	.+50     	; 0x666 <vfprintf+0xe6>
 634:	36 fe       	sbrs	r3, 6
 636:	06 c0       	rjmp	.+12     	; 0x644 <vfprintf+0xc4>
 638:	8a e0       	ldi	r24, 0x0A	; 10
 63a:	98 9e       	mul	r9, r24
 63c:	20 0d       	add	r18, r0
 63e:	11 24       	eor	r1, r1
 640:	92 2e       	mov	r9, r18
 642:	11 c0       	rjmp	.+34     	; 0x666 <vfprintf+0xe6>
 644:	ea e0       	ldi	r30, 0x0A	; 10
 646:	2e 9e       	mul	r2, r30
 648:	20 0d       	add	r18, r0
 64a:	11 24       	eor	r1, r1
 64c:	22 2e       	mov	r2, r18
 64e:	f3 2d       	mov	r31, r3
 650:	f0 62       	ori	r31, 0x20	; 32
 652:	3f 2e       	mov	r3, r31
 654:	08 c0       	rjmp	.+16     	; 0x666 <vfprintf+0xe6>
 656:	8c 36       	cpi	r24, 0x6C	; 108
 658:	21 f4       	brne	.+8      	; 0x662 <vfprintf+0xe2>
 65a:	83 2d       	mov	r24, r3
 65c:	80 68       	ori	r24, 0x80	; 128
 65e:	38 2e       	mov	r3, r24
 660:	02 c0       	rjmp	.+4      	; 0x666 <vfprintf+0xe6>
 662:	88 36       	cpi	r24, 0x68	; 104
 664:	41 f4       	brne	.+16     	; 0x676 <vfprintf+0xf6>
 666:	f7 01       	movw	r30, r14
 668:	93 fd       	sbrc	r25, 3
 66a:	85 91       	lpm	r24, Z+
 66c:	93 ff       	sbrs	r25, 3
 66e:	81 91       	ld	r24, Z+
 670:	7f 01       	movw	r14, r30
 672:	81 11       	cpse	r24, r1
 674:	b3 cf       	rjmp	.-154    	; 0x5dc <vfprintf+0x5c>
 676:	98 2f       	mov	r25, r24
 678:	9f 7d       	andi	r25, 0xDF	; 223
 67a:	95 54       	subi	r25, 0x45	; 69
 67c:	93 30       	cpi	r25, 0x03	; 3
 67e:	28 f4       	brcc	.+10     	; 0x68a <vfprintf+0x10a>
 680:	0c 5f       	subi	r16, 0xFC	; 252
 682:	1f 4f       	sbci	r17, 0xFF	; 255
 684:	9f e3       	ldi	r25, 0x3F	; 63
 686:	99 83       	std	Y+1, r25	; 0x01
 688:	0d c0       	rjmp	.+26     	; 0x6a4 <vfprintf+0x124>
 68a:	83 36       	cpi	r24, 0x63	; 99
 68c:	31 f0       	breq	.+12     	; 0x69a <vfprintf+0x11a>
 68e:	83 37       	cpi	r24, 0x73	; 115
 690:	71 f0       	breq	.+28     	; 0x6ae <vfprintf+0x12e>
 692:	83 35       	cpi	r24, 0x53	; 83
 694:	09 f0       	breq	.+2      	; 0x698 <vfprintf+0x118>
 696:	59 c0       	rjmp	.+178    	; 0x74a <vfprintf+0x1ca>
 698:	21 c0       	rjmp	.+66     	; 0x6dc <vfprintf+0x15c>
 69a:	f8 01       	movw	r30, r16
 69c:	80 81       	ld	r24, Z
 69e:	89 83       	std	Y+1, r24	; 0x01
 6a0:	0e 5f       	subi	r16, 0xFE	; 254
 6a2:	1f 4f       	sbci	r17, 0xFF	; 255
 6a4:	88 24       	eor	r8, r8
 6a6:	83 94       	inc	r8
 6a8:	91 2c       	mov	r9, r1
 6aa:	53 01       	movw	r10, r6
 6ac:	13 c0       	rjmp	.+38     	; 0x6d4 <vfprintf+0x154>
 6ae:	28 01       	movw	r4, r16
 6b0:	f2 e0       	ldi	r31, 0x02	; 2
 6b2:	4f 0e       	add	r4, r31
 6b4:	51 1c       	adc	r5, r1
 6b6:	f8 01       	movw	r30, r16
 6b8:	a0 80       	ld	r10, Z
 6ba:	b1 80       	ldd	r11, Z+1	; 0x01
 6bc:	36 fe       	sbrs	r3, 6
 6be:	03 c0       	rjmp	.+6      	; 0x6c6 <vfprintf+0x146>
 6c0:	69 2d       	mov	r22, r9
 6c2:	70 e0       	ldi	r23, 0x00	; 0
 6c4:	02 c0       	rjmp	.+4      	; 0x6ca <vfprintf+0x14a>
 6c6:	6f ef       	ldi	r22, 0xFF	; 255
 6c8:	7f ef       	ldi	r23, 0xFF	; 255
 6ca:	c5 01       	movw	r24, r10
 6cc:	0e 94 ac 04 	call	0x958	; 0x958 <strnlen>
 6d0:	4c 01       	movw	r8, r24
 6d2:	82 01       	movw	r16, r4
 6d4:	f3 2d       	mov	r31, r3
 6d6:	ff 77       	andi	r31, 0x7F	; 127
 6d8:	3f 2e       	mov	r3, r31
 6da:	16 c0       	rjmp	.+44     	; 0x708 <vfprintf+0x188>
 6dc:	28 01       	movw	r4, r16
 6de:	22 e0       	ldi	r18, 0x02	; 2
 6e0:	42 0e       	add	r4, r18
 6e2:	51 1c       	adc	r5, r1
 6e4:	f8 01       	movw	r30, r16
 6e6:	a0 80       	ld	r10, Z
 6e8:	b1 80       	ldd	r11, Z+1	; 0x01
 6ea:	36 fe       	sbrs	r3, 6
 6ec:	03 c0       	rjmp	.+6      	; 0x6f4 <vfprintf+0x174>
 6ee:	69 2d       	mov	r22, r9
 6f0:	70 e0       	ldi	r23, 0x00	; 0
 6f2:	02 c0       	rjmp	.+4      	; 0x6f8 <vfprintf+0x178>
 6f4:	6f ef       	ldi	r22, 0xFF	; 255
 6f6:	7f ef       	ldi	r23, 0xFF	; 255
 6f8:	c5 01       	movw	r24, r10
 6fa:	0e 94 a1 04 	call	0x942	; 0x942 <strnlen_P>
 6fe:	4c 01       	movw	r8, r24
 700:	f3 2d       	mov	r31, r3
 702:	f0 68       	ori	r31, 0x80	; 128
 704:	3f 2e       	mov	r3, r31
 706:	82 01       	movw	r16, r4
 708:	33 fc       	sbrc	r3, 3
 70a:	1b c0       	rjmp	.+54     	; 0x742 <vfprintf+0x1c2>
 70c:	82 2d       	mov	r24, r2
 70e:	90 e0       	ldi	r25, 0x00	; 0
 710:	88 16       	cp	r8, r24
 712:	99 06       	cpc	r9, r25
 714:	b0 f4       	brcc	.+44     	; 0x742 <vfprintf+0x1c2>
 716:	b6 01       	movw	r22, r12
 718:	80 e2       	ldi	r24, 0x20	; 32
 71a:	90 e0       	ldi	r25, 0x00	; 0
 71c:	0e 94 b7 04 	call	0x96e	; 0x96e <fputc>
 720:	2a 94       	dec	r2
 722:	f4 cf       	rjmp	.-24     	; 0x70c <vfprintf+0x18c>
 724:	f5 01       	movw	r30, r10
 726:	37 fc       	sbrc	r3, 7
 728:	85 91       	lpm	r24, Z+
 72a:	37 fe       	sbrs	r3, 7
 72c:	81 91       	ld	r24, Z+
 72e:	5f 01       	movw	r10, r30
 730:	b6 01       	movw	r22, r12
 732:	90 e0       	ldi	r25, 0x00	; 0
 734:	0e 94 b7 04 	call	0x96e	; 0x96e <fputc>
 738:	21 10       	cpse	r2, r1
 73a:	2a 94       	dec	r2
 73c:	21 e0       	ldi	r18, 0x01	; 1
 73e:	82 1a       	sub	r8, r18
 740:	91 08       	sbc	r9, r1
 742:	81 14       	cp	r8, r1
 744:	91 04       	cpc	r9, r1
 746:	71 f7       	brne	.-36     	; 0x724 <vfprintf+0x1a4>
 748:	e8 c0       	rjmp	.+464    	; 0x91a <__stack+0x1b>
 74a:	84 36       	cpi	r24, 0x64	; 100
 74c:	11 f0       	breq	.+4      	; 0x752 <vfprintf+0x1d2>
 74e:	89 36       	cpi	r24, 0x69	; 105
 750:	41 f5       	brne	.+80     	; 0x7a2 <vfprintf+0x222>
 752:	f8 01       	movw	r30, r16
 754:	37 fe       	sbrs	r3, 7
 756:	07 c0       	rjmp	.+14     	; 0x766 <vfprintf+0x1e6>
 758:	60 81       	ld	r22, Z
 75a:	71 81       	ldd	r23, Z+1	; 0x01
 75c:	82 81       	ldd	r24, Z+2	; 0x02
 75e:	93 81       	ldd	r25, Z+3	; 0x03
 760:	0c 5f       	subi	r16, 0xFC	; 252
 762:	1f 4f       	sbci	r17, 0xFF	; 255
 764:	08 c0       	rjmp	.+16     	; 0x776 <vfprintf+0x1f6>
 766:	60 81       	ld	r22, Z
 768:	71 81       	ldd	r23, Z+1	; 0x01
 76a:	07 2e       	mov	r0, r23
 76c:	00 0c       	add	r0, r0
 76e:	88 0b       	sbc	r24, r24
 770:	99 0b       	sbc	r25, r25
 772:	0e 5f       	subi	r16, 0xFE	; 254
 774:	1f 4f       	sbci	r17, 0xFF	; 255
 776:	f3 2d       	mov	r31, r3
 778:	ff 76       	andi	r31, 0x6F	; 111
 77a:	3f 2e       	mov	r3, r31
 77c:	97 ff       	sbrs	r25, 7
 77e:	09 c0       	rjmp	.+18     	; 0x792 <vfprintf+0x212>
 780:	90 95       	com	r25
 782:	80 95       	com	r24
 784:	70 95       	com	r23
 786:	61 95       	neg	r22
 788:	7f 4f       	sbci	r23, 0xFF	; 255
 78a:	8f 4f       	sbci	r24, 0xFF	; 255
 78c:	9f 4f       	sbci	r25, 0xFF	; 255
 78e:	f0 68       	ori	r31, 0x80	; 128
 790:	3f 2e       	mov	r3, r31
 792:	2a e0       	ldi	r18, 0x0A	; 10
 794:	30 e0       	ldi	r19, 0x00	; 0
 796:	a3 01       	movw	r20, r6
 798:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <__ultoa_invert>
 79c:	88 2e       	mov	r8, r24
 79e:	86 18       	sub	r8, r6
 7a0:	45 c0       	rjmp	.+138    	; 0x82c <vfprintf+0x2ac>
 7a2:	85 37       	cpi	r24, 0x75	; 117
 7a4:	31 f4       	brne	.+12     	; 0x7b2 <vfprintf+0x232>
 7a6:	23 2d       	mov	r18, r3
 7a8:	2f 7e       	andi	r18, 0xEF	; 239
 7aa:	b2 2e       	mov	r11, r18
 7ac:	2a e0       	ldi	r18, 0x0A	; 10
 7ae:	30 e0       	ldi	r19, 0x00	; 0
 7b0:	25 c0       	rjmp	.+74     	; 0x7fc <vfprintf+0x27c>
 7b2:	93 2d       	mov	r25, r3
 7b4:	99 7f       	andi	r25, 0xF9	; 249
 7b6:	b9 2e       	mov	r11, r25
 7b8:	8f 36       	cpi	r24, 0x6F	; 111
 7ba:	c1 f0       	breq	.+48     	; 0x7ec <vfprintf+0x26c>
 7bc:	18 f4       	brcc	.+6      	; 0x7c4 <vfprintf+0x244>
 7be:	88 35       	cpi	r24, 0x58	; 88
 7c0:	79 f0       	breq	.+30     	; 0x7e0 <vfprintf+0x260>
 7c2:	b5 c0       	rjmp	.+362    	; 0x92e <__stack+0x2f>
 7c4:	80 37       	cpi	r24, 0x70	; 112
 7c6:	19 f0       	breq	.+6      	; 0x7ce <vfprintf+0x24e>
 7c8:	88 37       	cpi	r24, 0x78	; 120
 7ca:	21 f0       	breq	.+8      	; 0x7d4 <vfprintf+0x254>
 7cc:	b0 c0       	rjmp	.+352    	; 0x92e <__stack+0x2f>
 7ce:	e9 2f       	mov	r30, r25
 7d0:	e0 61       	ori	r30, 0x10	; 16
 7d2:	be 2e       	mov	r11, r30
 7d4:	b4 fe       	sbrs	r11, 4
 7d6:	0d c0       	rjmp	.+26     	; 0x7f2 <vfprintf+0x272>
 7d8:	fb 2d       	mov	r31, r11
 7da:	f4 60       	ori	r31, 0x04	; 4
 7dc:	bf 2e       	mov	r11, r31
 7de:	09 c0       	rjmp	.+18     	; 0x7f2 <vfprintf+0x272>
 7e0:	34 fe       	sbrs	r3, 4
 7e2:	0a c0       	rjmp	.+20     	; 0x7f8 <vfprintf+0x278>
 7e4:	29 2f       	mov	r18, r25
 7e6:	26 60       	ori	r18, 0x06	; 6
 7e8:	b2 2e       	mov	r11, r18
 7ea:	06 c0       	rjmp	.+12     	; 0x7f8 <vfprintf+0x278>
 7ec:	28 e0       	ldi	r18, 0x08	; 8
 7ee:	30 e0       	ldi	r19, 0x00	; 0
 7f0:	05 c0       	rjmp	.+10     	; 0x7fc <vfprintf+0x27c>
 7f2:	20 e1       	ldi	r18, 0x10	; 16
 7f4:	30 e0       	ldi	r19, 0x00	; 0
 7f6:	02 c0       	rjmp	.+4      	; 0x7fc <vfprintf+0x27c>
 7f8:	20 e1       	ldi	r18, 0x10	; 16
 7fa:	32 e0       	ldi	r19, 0x02	; 2
 7fc:	f8 01       	movw	r30, r16
 7fe:	b7 fe       	sbrs	r11, 7
 800:	07 c0       	rjmp	.+14     	; 0x810 <vfprintf+0x290>
 802:	60 81       	ld	r22, Z
 804:	71 81       	ldd	r23, Z+1	; 0x01
 806:	82 81       	ldd	r24, Z+2	; 0x02
 808:	93 81       	ldd	r25, Z+3	; 0x03
 80a:	0c 5f       	subi	r16, 0xFC	; 252
 80c:	1f 4f       	sbci	r17, 0xFF	; 255
 80e:	06 c0       	rjmp	.+12     	; 0x81c <vfprintf+0x29c>
 810:	60 81       	ld	r22, Z
 812:	71 81       	ldd	r23, Z+1	; 0x01
 814:	80 e0       	ldi	r24, 0x00	; 0
 816:	90 e0       	ldi	r25, 0x00	; 0
 818:	0e 5f       	subi	r16, 0xFE	; 254
 81a:	1f 4f       	sbci	r17, 0xFF	; 255
 81c:	a3 01       	movw	r20, r6
 81e:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <__ultoa_invert>
 822:	88 2e       	mov	r8, r24
 824:	86 18       	sub	r8, r6
 826:	fb 2d       	mov	r31, r11
 828:	ff 77       	andi	r31, 0x7F	; 127
 82a:	3f 2e       	mov	r3, r31
 82c:	36 fe       	sbrs	r3, 6
 82e:	0d c0       	rjmp	.+26     	; 0x84a <vfprintf+0x2ca>
 830:	23 2d       	mov	r18, r3
 832:	2e 7f       	andi	r18, 0xFE	; 254
 834:	a2 2e       	mov	r10, r18
 836:	89 14       	cp	r8, r9
 838:	58 f4       	brcc	.+22     	; 0x850 <vfprintf+0x2d0>
 83a:	34 fe       	sbrs	r3, 4
 83c:	0b c0       	rjmp	.+22     	; 0x854 <vfprintf+0x2d4>
 83e:	32 fc       	sbrc	r3, 2
 840:	09 c0       	rjmp	.+18     	; 0x854 <vfprintf+0x2d4>
 842:	83 2d       	mov	r24, r3
 844:	8e 7e       	andi	r24, 0xEE	; 238
 846:	a8 2e       	mov	r10, r24
 848:	05 c0       	rjmp	.+10     	; 0x854 <vfprintf+0x2d4>
 84a:	b8 2c       	mov	r11, r8
 84c:	a3 2c       	mov	r10, r3
 84e:	03 c0       	rjmp	.+6      	; 0x856 <vfprintf+0x2d6>
 850:	b8 2c       	mov	r11, r8
 852:	01 c0       	rjmp	.+2      	; 0x856 <vfprintf+0x2d6>
 854:	b9 2c       	mov	r11, r9
 856:	a4 fe       	sbrs	r10, 4
 858:	0f c0       	rjmp	.+30     	; 0x878 <vfprintf+0x2f8>
 85a:	fe 01       	movw	r30, r28
 85c:	e8 0d       	add	r30, r8
 85e:	f1 1d       	adc	r31, r1
 860:	80 81       	ld	r24, Z
 862:	80 33       	cpi	r24, 0x30	; 48
 864:	21 f4       	brne	.+8      	; 0x86e <vfprintf+0x2ee>
 866:	9a 2d       	mov	r25, r10
 868:	99 7e       	andi	r25, 0xE9	; 233
 86a:	a9 2e       	mov	r10, r25
 86c:	09 c0       	rjmp	.+18     	; 0x880 <vfprintf+0x300>
 86e:	a2 fe       	sbrs	r10, 2
 870:	06 c0       	rjmp	.+12     	; 0x87e <vfprintf+0x2fe>
 872:	b3 94       	inc	r11
 874:	b3 94       	inc	r11
 876:	04 c0       	rjmp	.+8      	; 0x880 <vfprintf+0x300>
 878:	8a 2d       	mov	r24, r10
 87a:	86 78       	andi	r24, 0x86	; 134
 87c:	09 f0       	breq	.+2      	; 0x880 <vfprintf+0x300>
 87e:	b3 94       	inc	r11
 880:	a3 fc       	sbrc	r10, 3
 882:	11 c0       	rjmp	.+34     	; 0x8a6 <vfprintf+0x326>
 884:	a0 fe       	sbrs	r10, 0
 886:	06 c0       	rjmp	.+12     	; 0x894 <vfprintf+0x314>
 888:	b2 14       	cp	r11, r2
 88a:	88 f4       	brcc	.+34     	; 0x8ae <vfprintf+0x32e>
 88c:	28 0c       	add	r2, r8
 88e:	92 2c       	mov	r9, r2
 890:	9b 18       	sub	r9, r11
 892:	0e c0       	rjmp	.+28     	; 0x8b0 <vfprintf+0x330>
 894:	b2 14       	cp	r11, r2
 896:	60 f4       	brcc	.+24     	; 0x8b0 <vfprintf+0x330>
 898:	b6 01       	movw	r22, r12
 89a:	80 e2       	ldi	r24, 0x20	; 32
 89c:	90 e0       	ldi	r25, 0x00	; 0
 89e:	0e 94 b7 04 	call	0x96e	; 0x96e <fputc>
 8a2:	b3 94       	inc	r11
 8a4:	f7 cf       	rjmp	.-18     	; 0x894 <vfprintf+0x314>
 8a6:	b2 14       	cp	r11, r2
 8a8:	18 f4       	brcc	.+6      	; 0x8b0 <vfprintf+0x330>
 8aa:	2b 18       	sub	r2, r11
 8ac:	02 c0       	rjmp	.+4      	; 0x8b2 <vfprintf+0x332>
 8ae:	98 2c       	mov	r9, r8
 8b0:	21 2c       	mov	r2, r1
 8b2:	a4 fe       	sbrs	r10, 4
 8b4:	10 c0       	rjmp	.+32     	; 0x8d6 <vfprintf+0x356>
 8b6:	b6 01       	movw	r22, r12
 8b8:	80 e3       	ldi	r24, 0x30	; 48
 8ba:	90 e0       	ldi	r25, 0x00	; 0
 8bc:	0e 94 b7 04 	call	0x96e	; 0x96e <fputc>
 8c0:	a2 fe       	sbrs	r10, 2
 8c2:	17 c0       	rjmp	.+46     	; 0x8f2 <vfprintf+0x372>
 8c4:	a1 fc       	sbrc	r10, 1
 8c6:	03 c0       	rjmp	.+6      	; 0x8ce <vfprintf+0x34e>
 8c8:	88 e7       	ldi	r24, 0x78	; 120
 8ca:	90 e0       	ldi	r25, 0x00	; 0
 8cc:	02 c0       	rjmp	.+4      	; 0x8d2 <vfprintf+0x352>
 8ce:	88 e5       	ldi	r24, 0x58	; 88
 8d0:	90 e0       	ldi	r25, 0x00	; 0
 8d2:	b6 01       	movw	r22, r12
 8d4:	0c c0       	rjmp	.+24     	; 0x8ee <vfprintf+0x36e>
 8d6:	8a 2d       	mov	r24, r10
 8d8:	86 78       	andi	r24, 0x86	; 134
 8da:	59 f0       	breq	.+22     	; 0x8f2 <vfprintf+0x372>
 8dc:	a1 fe       	sbrs	r10, 1
 8de:	02 c0       	rjmp	.+4      	; 0x8e4 <vfprintf+0x364>
 8e0:	8b e2       	ldi	r24, 0x2B	; 43
 8e2:	01 c0       	rjmp	.+2      	; 0x8e6 <vfprintf+0x366>
 8e4:	80 e2       	ldi	r24, 0x20	; 32
 8e6:	a7 fc       	sbrc	r10, 7
 8e8:	8d e2       	ldi	r24, 0x2D	; 45
 8ea:	b6 01       	movw	r22, r12
 8ec:	90 e0       	ldi	r25, 0x00	; 0
 8ee:	0e 94 b7 04 	call	0x96e	; 0x96e <fputc>
 8f2:	89 14       	cp	r8, r9
 8f4:	38 f4       	brcc	.+14     	; 0x904 <__stack+0x5>
 8f6:	b6 01       	movw	r22, r12
 8f8:	80 e3       	ldi	r24, 0x30	; 48
 8fa:	90 e0       	ldi	r25, 0x00	; 0
 8fc:	0e 94 b7 04 	call	0x96e	; 0x96e <fputc>
 900:	9a 94       	dec	r9
 902:	f7 cf       	rjmp	.-18     	; 0x8f2 <vfprintf+0x372>
 904:	8a 94       	dec	r8
 906:	f3 01       	movw	r30, r6
 908:	e8 0d       	add	r30, r8
 90a:	f1 1d       	adc	r31, r1
 90c:	80 81       	ld	r24, Z
 90e:	b6 01       	movw	r22, r12
 910:	90 e0       	ldi	r25, 0x00	; 0
 912:	0e 94 b7 04 	call	0x96e	; 0x96e <fputc>
 916:	81 10       	cpse	r8, r1
 918:	f5 cf       	rjmp	.-22     	; 0x904 <__stack+0x5>
 91a:	22 20       	and	r2, r2
 91c:	09 f4       	brne	.+2      	; 0x920 <__stack+0x21>
 91e:	42 ce       	rjmp	.-892    	; 0x5a4 <vfprintf+0x24>
 920:	b6 01       	movw	r22, r12
 922:	80 e2       	ldi	r24, 0x20	; 32
 924:	90 e0       	ldi	r25, 0x00	; 0
 926:	0e 94 b7 04 	call	0x96e	; 0x96e <fputc>
 92a:	2a 94       	dec	r2
 92c:	f6 cf       	rjmp	.-20     	; 0x91a <__stack+0x1b>
 92e:	f6 01       	movw	r30, r12
 930:	86 81       	ldd	r24, Z+6	; 0x06
 932:	97 81       	ldd	r25, Z+7	; 0x07
 934:	02 c0       	rjmp	.+4      	; 0x93a <__stack+0x3b>
 936:	8f ef       	ldi	r24, 0xFF	; 255
 938:	9f ef       	ldi	r25, 0xFF	; 255
 93a:	2b 96       	adiw	r28, 0x0b	; 11
 93c:	e2 e1       	ldi	r30, 0x12	; 18
 93e:	0c 94 6d 05 	jmp	0xada	; 0xada <__epilogue_restores__>

00000942 <strnlen_P>:
 942:	fc 01       	movw	r30, r24
 944:	05 90       	lpm	r0, Z+
 946:	61 50       	subi	r22, 0x01	; 1
 948:	70 40       	sbci	r23, 0x00	; 0
 94a:	01 10       	cpse	r0, r1
 94c:	d8 f7       	brcc	.-10     	; 0x944 <strnlen_P+0x2>
 94e:	80 95       	com	r24
 950:	90 95       	com	r25
 952:	8e 0f       	add	r24, r30
 954:	9f 1f       	adc	r25, r31
 956:	08 95       	ret

00000958 <strnlen>:
 958:	fc 01       	movw	r30, r24
 95a:	61 50       	subi	r22, 0x01	; 1
 95c:	70 40       	sbci	r23, 0x00	; 0
 95e:	01 90       	ld	r0, Z+
 960:	01 10       	cpse	r0, r1
 962:	d8 f7       	brcc	.-10     	; 0x95a <strnlen+0x2>
 964:	80 95       	com	r24
 966:	90 95       	com	r25
 968:	8e 0f       	add	r24, r30
 96a:	9f 1f       	adc	r25, r31
 96c:	08 95       	ret

0000096e <fputc>:
 96e:	0f 93       	push	r16
 970:	1f 93       	push	r17
 972:	cf 93       	push	r28
 974:	df 93       	push	r29
 976:	fb 01       	movw	r30, r22
 978:	23 81       	ldd	r18, Z+3	; 0x03
 97a:	21 fd       	sbrc	r18, 1
 97c:	03 c0       	rjmp	.+6      	; 0x984 <fputc+0x16>
 97e:	8f ef       	ldi	r24, 0xFF	; 255
 980:	9f ef       	ldi	r25, 0xFF	; 255
 982:	2c c0       	rjmp	.+88     	; 0x9dc <fputc+0x6e>
 984:	22 ff       	sbrs	r18, 2
 986:	16 c0       	rjmp	.+44     	; 0x9b4 <fputc+0x46>
 988:	46 81       	ldd	r20, Z+6	; 0x06
 98a:	57 81       	ldd	r21, Z+7	; 0x07
 98c:	24 81       	ldd	r18, Z+4	; 0x04
 98e:	35 81       	ldd	r19, Z+5	; 0x05
 990:	42 17       	cp	r20, r18
 992:	53 07       	cpc	r21, r19
 994:	44 f4       	brge	.+16     	; 0x9a6 <fputc+0x38>
 996:	a0 81       	ld	r26, Z
 998:	b1 81       	ldd	r27, Z+1	; 0x01
 99a:	9d 01       	movw	r18, r26
 99c:	2f 5f       	subi	r18, 0xFF	; 255
 99e:	3f 4f       	sbci	r19, 0xFF	; 255
 9a0:	31 83       	std	Z+1, r19	; 0x01
 9a2:	20 83       	st	Z, r18
 9a4:	8c 93       	st	X, r24
 9a6:	26 81       	ldd	r18, Z+6	; 0x06
 9a8:	37 81       	ldd	r19, Z+7	; 0x07
 9aa:	2f 5f       	subi	r18, 0xFF	; 255
 9ac:	3f 4f       	sbci	r19, 0xFF	; 255
 9ae:	37 83       	std	Z+7, r19	; 0x07
 9b0:	26 83       	std	Z+6, r18	; 0x06
 9b2:	14 c0       	rjmp	.+40     	; 0x9dc <fputc+0x6e>
 9b4:	8b 01       	movw	r16, r22
 9b6:	ec 01       	movw	r28, r24
 9b8:	fb 01       	movw	r30, r22
 9ba:	00 84       	ldd	r0, Z+8	; 0x08
 9bc:	f1 85       	ldd	r31, Z+9	; 0x09
 9be:	e0 2d       	mov	r30, r0
 9c0:	09 95       	icall
 9c2:	89 2b       	or	r24, r25
 9c4:	e1 f6       	brne	.-72     	; 0x97e <fputc+0x10>
 9c6:	d8 01       	movw	r26, r16
 9c8:	16 96       	adiw	r26, 0x06	; 6
 9ca:	8d 91       	ld	r24, X+
 9cc:	9c 91       	ld	r25, X
 9ce:	17 97       	sbiw	r26, 0x07	; 7
 9d0:	01 96       	adiw	r24, 0x01	; 1
 9d2:	17 96       	adiw	r26, 0x07	; 7
 9d4:	9c 93       	st	X, r25
 9d6:	8e 93       	st	-X, r24
 9d8:	16 97       	sbiw	r26, 0x06	; 6
 9da:	ce 01       	movw	r24, r28
 9dc:	df 91       	pop	r29
 9de:	cf 91       	pop	r28
 9e0:	1f 91       	pop	r17
 9e2:	0f 91       	pop	r16
 9e4:	08 95       	ret

000009e6 <__ultoa_invert>:
 9e6:	fa 01       	movw	r30, r20
 9e8:	aa 27       	eor	r26, r26
 9ea:	28 30       	cpi	r18, 0x08	; 8
 9ec:	51 f1       	breq	.+84     	; 0xa42 <__ultoa_invert+0x5c>
 9ee:	20 31       	cpi	r18, 0x10	; 16
 9f0:	81 f1       	breq	.+96     	; 0xa52 <__ultoa_invert+0x6c>
 9f2:	e8 94       	clt
 9f4:	6f 93       	push	r22
 9f6:	6e 7f       	andi	r22, 0xFE	; 254
 9f8:	6e 5f       	subi	r22, 0xFE	; 254
 9fa:	7f 4f       	sbci	r23, 0xFF	; 255
 9fc:	8f 4f       	sbci	r24, 0xFF	; 255
 9fe:	9f 4f       	sbci	r25, 0xFF	; 255
 a00:	af 4f       	sbci	r26, 0xFF	; 255
 a02:	b1 e0       	ldi	r27, 0x01	; 1
 a04:	3e d0       	rcall	.+124    	; 0xa82 <__ultoa_invert+0x9c>
 a06:	b4 e0       	ldi	r27, 0x04	; 4
 a08:	3c d0       	rcall	.+120    	; 0xa82 <__ultoa_invert+0x9c>
 a0a:	67 0f       	add	r22, r23
 a0c:	78 1f       	adc	r23, r24
 a0e:	89 1f       	adc	r24, r25
 a10:	9a 1f       	adc	r25, r26
 a12:	a1 1d       	adc	r26, r1
 a14:	68 0f       	add	r22, r24
 a16:	79 1f       	adc	r23, r25
 a18:	8a 1f       	adc	r24, r26
 a1a:	91 1d       	adc	r25, r1
 a1c:	a1 1d       	adc	r26, r1
 a1e:	6a 0f       	add	r22, r26
 a20:	71 1d       	adc	r23, r1
 a22:	81 1d       	adc	r24, r1
 a24:	91 1d       	adc	r25, r1
 a26:	a1 1d       	adc	r26, r1
 a28:	20 d0       	rcall	.+64     	; 0xa6a <__ultoa_invert+0x84>
 a2a:	09 f4       	brne	.+2      	; 0xa2e <__ultoa_invert+0x48>
 a2c:	68 94       	set
 a2e:	3f 91       	pop	r19
 a30:	2a e0       	ldi	r18, 0x0A	; 10
 a32:	26 9f       	mul	r18, r22
 a34:	11 24       	eor	r1, r1
 a36:	30 19       	sub	r19, r0
 a38:	30 5d       	subi	r19, 0xD0	; 208
 a3a:	31 93       	st	Z+, r19
 a3c:	de f6       	brtc	.-74     	; 0x9f4 <__ultoa_invert+0xe>
 a3e:	cf 01       	movw	r24, r30
 a40:	08 95       	ret
 a42:	46 2f       	mov	r20, r22
 a44:	47 70       	andi	r20, 0x07	; 7
 a46:	40 5d       	subi	r20, 0xD0	; 208
 a48:	41 93       	st	Z+, r20
 a4a:	b3 e0       	ldi	r27, 0x03	; 3
 a4c:	0f d0       	rcall	.+30     	; 0xa6c <__ultoa_invert+0x86>
 a4e:	c9 f7       	brne	.-14     	; 0xa42 <__ultoa_invert+0x5c>
 a50:	f6 cf       	rjmp	.-20     	; 0xa3e <__ultoa_invert+0x58>
 a52:	46 2f       	mov	r20, r22
 a54:	4f 70       	andi	r20, 0x0F	; 15
 a56:	40 5d       	subi	r20, 0xD0	; 208
 a58:	4a 33       	cpi	r20, 0x3A	; 58
 a5a:	18 f0       	brcs	.+6      	; 0xa62 <__ultoa_invert+0x7c>
 a5c:	49 5d       	subi	r20, 0xD9	; 217
 a5e:	31 fd       	sbrc	r19, 1
 a60:	40 52       	subi	r20, 0x20	; 32
 a62:	41 93       	st	Z+, r20
 a64:	02 d0       	rcall	.+4      	; 0xa6a <__ultoa_invert+0x84>
 a66:	a9 f7       	brne	.-22     	; 0xa52 <__ultoa_invert+0x6c>
 a68:	ea cf       	rjmp	.-44     	; 0xa3e <__ultoa_invert+0x58>
 a6a:	b4 e0       	ldi	r27, 0x04	; 4
 a6c:	a6 95       	lsr	r26
 a6e:	97 95       	ror	r25
 a70:	87 95       	ror	r24
 a72:	77 95       	ror	r23
 a74:	67 95       	ror	r22
 a76:	ba 95       	dec	r27
 a78:	c9 f7       	brne	.-14     	; 0xa6c <__ultoa_invert+0x86>
 a7a:	00 97       	sbiw	r24, 0x00	; 0
 a7c:	61 05       	cpc	r22, r1
 a7e:	71 05       	cpc	r23, r1
 a80:	08 95       	ret
 a82:	9b 01       	movw	r18, r22
 a84:	ac 01       	movw	r20, r24
 a86:	0a 2e       	mov	r0, r26
 a88:	06 94       	lsr	r0
 a8a:	57 95       	ror	r21
 a8c:	47 95       	ror	r20
 a8e:	37 95       	ror	r19
 a90:	27 95       	ror	r18
 a92:	ba 95       	dec	r27
 a94:	c9 f7       	brne	.-14     	; 0xa88 <__ultoa_invert+0xa2>
 a96:	62 0f       	add	r22, r18
 a98:	73 1f       	adc	r23, r19
 a9a:	84 1f       	adc	r24, r20
 a9c:	95 1f       	adc	r25, r21
 a9e:	a0 1d       	adc	r26, r0
 aa0:	08 95       	ret

00000aa2 <__prologue_saves__>:
 aa2:	2f 92       	push	r2
 aa4:	3f 92       	push	r3
 aa6:	4f 92       	push	r4
 aa8:	5f 92       	push	r5
 aaa:	6f 92       	push	r6
 aac:	7f 92       	push	r7
 aae:	8f 92       	push	r8
 ab0:	9f 92       	push	r9
 ab2:	af 92       	push	r10
 ab4:	bf 92       	push	r11
 ab6:	cf 92       	push	r12
 ab8:	df 92       	push	r13
 aba:	ef 92       	push	r14
 abc:	ff 92       	push	r15
 abe:	0f 93       	push	r16
 ac0:	1f 93       	push	r17
 ac2:	cf 93       	push	r28
 ac4:	df 93       	push	r29
 ac6:	cd b7       	in	r28, 0x3d	; 61
 ac8:	de b7       	in	r29, 0x3e	; 62
 aca:	ca 1b       	sub	r28, r26
 acc:	db 0b       	sbc	r29, r27
 ace:	0f b6       	in	r0, 0x3f	; 63
 ad0:	f8 94       	cli
 ad2:	de bf       	out	0x3e, r29	; 62
 ad4:	0f be       	out	0x3f, r0	; 63
 ad6:	cd bf       	out	0x3d, r28	; 61
 ad8:	09 94       	ijmp

00000ada <__epilogue_restores__>:
 ada:	2a 88       	ldd	r2, Y+18	; 0x12
 adc:	39 88       	ldd	r3, Y+17	; 0x11
 ade:	48 88       	ldd	r4, Y+16	; 0x10
 ae0:	5f 84       	ldd	r5, Y+15	; 0x0f
 ae2:	6e 84       	ldd	r6, Y+14	; 0x0e
 ae4:	7d 84       	ldd	r7, Y+13	; 0x0d
 ae6:	8c 84       	ldd	r8, Y+12	; 0x0c
 ae8:	9b 84       	ldd	r9, Y+11	; 0x0b
 aea:	aa 84       	ldd	r10, Y+10	; 0x0a
 aec:	b9 84       	ldd	r11, Y+9	; 0x09
 aee:	c8 84       	ldd	r12, Y+8	; 0x08
 af0:	df 80       	ldd	r13, Y+7	; 0x07
 af2:	ee 80       	ldd	r14, Y+6	; 0x06
 af4:	fd 80       	ldd	r15, Y+5	; 0x05
 af6:	0c 81       	ldd	r16, Y+4	; 0x04
 af8:	1b 81       	ldd	r17, Y+3	; 0x03
 afa:	aa 81       	ldd	r26, Y+2	; 0x02
 afc:	b9 81       	ldd	r27, Y+1	; 0x01
 afe:	ce 0f       	add	r28, r30
 b00:	d1 1d       	adc	r29, r1
 b02:	0f b6       	in	r0, 0x3f	; 63
 b04:	f8 94       	cli
 b06:	de bf       	out	0x3e, r29	; 62
 b08:	0f be       	out	0x3f, r0	; 63
 b0a:	cd bf       	out	0x3d, r28	; 61
 b0c:	ed 01       	movw	r28, r26
 b0e:	08 95       	ret

00000b10 <_exit>:
 b10:	f8 94       	cli

00000b12 <__stop_program>:
 b12:	ff cf       	rjmp	.-2      	; 0xb12 <__stop_program>
